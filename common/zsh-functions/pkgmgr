# homebrew
if (( ${+commands[brew]} )); then
  typeset -gA brew_list
  export brew_json="${XDG_CACHE_HOME}/brew.json"

  function brew() {
    local brew_user="homebrew"
    if (dscl . -list /Users | grep -q "${brew_user}"); then
      # it is always good to specify full path when switching to root user so that sudoers can be configured properly
      sudo -u $brew_user -- "${commands[brew]}" "$@"
    else
      brew "$@"
    fi
    _brew_list_cache
  }

  function _brew_list_cache() {
    log_info "generating brew list..."
    command brew info --installed --json=v2 > "${brew_json}"
    _brew_list_update
  }

  function _brew_list_update(){
    brew_list=($(cat "$brew_json" | jq -r '.formulae[] | .name, .installed[0].version'))
    brew_list+=($(cat "$brew_json" | jq -r '.casks[] | .token, .version'))
  }

  if [[ ! -e "${brew_json}" ]]; then
    _brew_list_cache
  fi
  _brew_list_update
fi

# apt
if (( ${+commands[apt-get]} )); then
  typeset -gA apt_list
  export apt_json="${XDG_CACHE_HOME}/apt.json"
  function apt-get() {
    sudo "${commands[apt-get]}" "$@"
    _apt_list_cache
  }

  function _apt_list_cache() {
    log_info "generating apt list..."
    dpkg-query --show -f '{"name":"${Package}","version":"${Version}","status":"${Status}"}\n' | \
      jq -r 'select(.status=="install ok installed")' > "${apt_json}"
    _apt_list_update
  }

  function _apt_list_update() {
    apt_list=($(cat "$apt_json" | jq -r '.name, .version'))
  }

  if [[ ! -e "${apt_json}" ]]; then
    _apt_list_cache
  fi
  _apt_list_update
fi

# snap
if (( ${+commands[snap]} )); then
  typeset -gA snap_list
  export snap_json="${XDG_CACHE_HOME}/snap.json"
  function snap() {
    sudo "${commands[snap]}" "$@"
  }

  function _snap_list_cache() {
    log_info "generating snap list..."
    sudo curl -sS --unix-socket /run/snapd.socket http://localhost/v2/snaps | tee "${snap_json}" >/dev/null
    _snap_list_update
  }

  function _snap_list_update() {
    snap_list=($(cat "$snap_json" | jq -r '.result[] | .name, .version'))
  }

  if [[ ! -e "${snap_json}" ]]; then
    _snap_list_cache
  fi
  _snap_list_update
fi

# vim: se filetype=zsh:
