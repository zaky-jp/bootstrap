function get_absolute_path() {
  local rp=$1 #somehow zsh cannot correctly invoke $1 directly and call $1 from outer-scope thus substituting with arbitary variable
  echo "${rp:a}"
}

function get_dirname() {
  local p=$1
  echo "${p:h}"
}

function backup() {
  local file=$1
  if [[ -e $file || -s $file ]]; then
    log_info "$file already exists. moving to ${file}.bak..."
    mv "${file}" "${file}.bak"
  fi
}

function safe_symlink() {
  if [[ $# != 2 ]]; then
    log_warn "safe_symlink: not enough argument given"
    exit 1
  fi
  local origin=$(get_absolute_path $1)
  local destination=$(get_absolute_path $2)

  if [[ -e $destination || -s $destination ]]; then
    log_info "$destination already exists"
    return
  fi

  # create destination dir if not exist
  if [[ ! -d $(get_dirname $destination) ]]; then
    mkdir -p $(get_dirname $destination)
  fi

  log_info "Symlinking $origin"
  ln -s "$origin" "$destination"
}

# vim: se filetype=zsh:
